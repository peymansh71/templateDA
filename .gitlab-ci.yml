image: lorisleiva/laravel-docker:latest

stages:
  - test
  # - docker-build
  - deploy

test:
  stage: test
  image: node
  script:
    - echo "Testing App"
    - yarn install
    - CI=true yarn test
    - echo "Test successfully!"
  except:
    - develop

# docker-build:
#   stage: docker-build
#   image: docker:latest
#   services:
#     - name: docker:19.03.8-dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE" .
#     - docker push "$CI_REGISTRY_IMAGE"
#     - echo "Registry image:" $CI_REGISTRY_IMAGE
#   when: manual

deploy:
  stage: deploy
  before_script:
    - echo "deploying app"
    # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - apk update && apk add git
    - 'which ssh-agent || ( apk install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    # - echo "$DEPLOY_DEV_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - SSH_ASKPASS="$SSH_DEV_PASSPHRASE" ssh-add <(echo "$DEPLOY_DEV_KEY")
    - ssh -o "StrictHostKeyChecking=no" ubuntu@app-dev.diversityatlas.com.au -p 22 " &&
        cd /var/app/da-app/ &&
        sudo docker-compose down -v &&
        sudo docker-compose up -d --build
      # - docker pull "$CI_REGISTRY_IMAGE"
      # - docker stop da_front || true && docker rm da_front || true
      # - docker run -p 80:80 -d --name da_front "$CI_REGISTRY_IMAGE"
  tags:
    - deploy
  environment:
    name: develop
    url: http://app-dev.diversityatlas.com.au/
  only:
  - develop
